@model WebApplication1.Models.Order
@{
    ViewBag.Title = "UpdatePage";
    Layout = "~/Views/_LayoutOorderPage.cshtml";
}


<!-- Update Order -->
<div id="updateOrder" class="updateOrder">
    <h3>修改訂單</h3>
    @using (Html.BeginForm("DoUpdate", "GetOrder", FormMethod.Post, new { @id = "updateForm" }))
    {
        @Html.AntiForgeryToken()

        <table class="table table-bordered">
            <tr>
                <td>
                    @Html.LabelFor(model => model.OrderID)
                </td>
                <td colspan="4">
                    @Html.TextBoxFor(model => model.OrderID, new { @class = "k-textbox", Value = ViewBag.orderData.OrderID })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.CustomerName)
                </td>
                <td colspan="4">
                    @Html.DropDownListFor(model => model.CustomerID, (List<SelectListItem>)ViewBag.customerData, string.Empty, new { @id = "CustomerID" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.EmployeeName)
                </td>
                <td colspan="4">
                    @Html.DropDownListFor(model => model.EmployeeID, (List<SelectListItem>)ViewBag.empData, string.Empty, new { @id = "EmployeeID" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.OrderDate)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.OrderDate, new { @id = "OrderDate", @type = "date", Value = ViewBag.OrderDate })
                </td>
                <td>
                    @Html.LabelFor(model => model.RequiredDate)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.RequiredDate, new { @id = "RequiredDate", @type = "date", Value = ViewBag.RequiredDate })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShippedDate)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShippedDate, new { @id = "ShippedDate", @type = "date", Value = ViewBag.ShippedDate })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipperName)
                </td>
                <td colspan="4">
                    @Html.DropDownListFor(model => model.ShipperID, (List<SelectListItem>)ViewBag.shipperData, string.Empty, new { @id = "ShipperID" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Freight)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Freight, new { @class = "k-textbox", Value = ViewBag.orderData.Freight })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShipCountry)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipCountry, new { @class = "k-textbox", Value = ViewBag.orderData.ShipCountry })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipCity)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipCity, new { @class = "k-textbox", Value = ViewBag.orderData.ShipCity })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShipRegion)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipRegion, new { @class = "k-textbox", Value = ViewBag.orderData.ShipRegion })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipPostalCode)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipPostalCode, new { @class = "k-textbox", Value = ViewBag.orderData.ShipPostalCode })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.ShipAddress)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipAddress, new { @class = "k-textbox", Value = ViewBag.orderData.ShipAddress })
                </td>
                <td>
                    @Html.LabelFor(model => model.ShipName)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ShipName, new { @class = "k-textbox", Value = ViewBag.orderData.ShipName })
                </td>
            </tr>
            <tr>
                <td>訂單金額總計</td>
                <td id="total" colspan="4">@ViewBag.Total</td>
            </tr>
            <tr>
                <td></td>
                <td colspan="4">
                    <input id="submitData" type="submit" value="存檔">
                    <input id="delete" type="button" value="刪除本筆訂單" onclick="location.href='/GetOrder/DoDelete?OrderID=@ViewBag.orderData.OrderID'">
                    <input id="back" type="button" onclick="location.href='./Index';" value="回前一頁" />
                </td>
            </tr>
        </table>

        <a onclick="AddNewDetail()" href="#">新增一筆</a>
        <table class="table table-bordered">
            <tr>
                <td>商品</td>
                <td>單價</td>
                <td>數量</td>
                <td>小計</td>
                <td></td>
            </tr>
            <tbody id="detailContent">
                @for (int i = 0; i < ViewBag.OrderDetails.Count; i++)
                {
                    <tr>
                        <td>@Html.DropDownListFor(model => Model.OrderDetails[i].ProductID, (List<SelectListItem>)ViewBag.productData[i], string.Empty, new { @id = "ProductID", @class = "ProductID", onchange = "GetPrice(this)" })</td>
                        <td>@Html.TextBoxFor(model => Model.OrderDetails[i].UnitPrice, new { @class = "k-textbox UnitPrice", @id = "UnitPrice", Value = ViewBag.OrderDetails[i].UnitPrice, onchange = "ChangePrice(this)" })</td>
                        <td>@Html.TextBoxFor(model => Model.OrderDetails[i].Qty, new { @class = "k-textbox Qty", Value = ViewBag.OrderDetails[i].Qty, onchange = "Count(this)" })</td>
                        @{
                            double UnitPrice = Convert.ToDouble(ViewBag.OrderDetails[i].UnitPrice);
                            double Qty = Convert.ToDouble(ViewBag.OrderDetails[i].Qty);
                        }
                       <td width="100px" class="count">@(Qty * UnitPrice)</td>
                        <td><button type="button" class="btnRemove" onclick="DoDeleteDetials(Model.OrderDetails[i].ProductID)">取消</button></td>
                    </tr>
                            }
            </tbody>
            
        </table>
                            }
</div>
<script>
    $(".btnRemove").kendoButton();
    $(".btnRemove").kendoButton();
   

    $("#submitData").kendoButton();
    $("#back").kendoButton();
    $("#delete").kendoButton();

    $("#EmployeeID").kendoComboBox({
        dataTextField: "EmployeeName",
        dataValueField: "EmployeeID",
    });

    $("#ShipperID").kendoComboBox({
        dataTextField: "ShipperName",
        dataValueField: "ShipperID",
    });
    $("#CustomerID").kendoComboBox({
        dataTextField: "CustomerName",
        dataValueField: "CustomerID",
    });
    //$(".ProductID").kendoComboBox();
    $("#RequiredDate").kendoDatePicker();
    $("#OrderDate").kendoDatePicker();
    $("#ShippedDate").kendoDatePicker();

    function AddNewDetail() {
        //明細資料範本
        var trtemplate = $('#detailContent tr').eq(0).html();
        //新增一列名資料
        $('#detailContent').append('<tr>' + trtemplate + '</tr>');

        //移除TR
        $('#detailContent').on('click', '.btnRemove', function () {
            $(this).closest('tr').remove();
            Total();
        });

        for (var i = 0 ; i < $('#detailContent tr').length; i++) {
            $('.ProductID').eq(i).attr('name', 'OrderDetails[' + i + '].ProductID');
            $('.Qty').eq(i).attr('name', 'OrderDetails[' + i + '].Qty');
            $('.UnitPrice').eq(i).attr('name', 'OrderDetails[' + i + '].UnitPrice');
        }
    }



    function GetPrice(item) {
        var price = [];
        var array = @Html.Raw(Json.Encode(@ViewBag.UnitPrice));
        for (var i = 0;i<array.length;i++){
            price[i] = array[i].Value;
        }
        $(item).parent().next('td').children().val(price[item.value-1]);
    }

    function Count(item){
        var unitprice = $(item).parent().prev('td').children().val();
        var qty = $(item).closest("input:text").val();
        var count = unitprice * qty;
        $(item).parent().next('td').text(count);
        Total(count);
    }

    function ChangePrice(item){
        var unitprice = $(item).closest("input:text").val();
        var qty = $(item).parent().next('td').children().val();
        var total = unitprice * qty;
        $(item).parent().next('td').next('td').text(total);
        Total();
    }

    function Total(count){
        var countArray = [];
        var total = 0;
        for(var i = 0;i < $('#detailContent tr').length; i++){
            countArray[i] = parseInt($('.count').eq(i).text());
            total += countArray[i];
        }
        document.getElementById("total").innerHTML = total;
    }
    function DoDelete(OrderID) {
        $.ajax({
            url: "/GetOrder/DoDelete",
            type: "POST",
            data: { OrderID: OrderID },
        });
    }
    function DoDeleteDetials(ProductID){
        $.ajax({
            url: "/GetOrder/DoDeleteDetial",
            type: "POST",
            data: { ProductID: ProductID },
        });
    }

</script>